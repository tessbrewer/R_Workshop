for (i in names(table(subset(combi, pbad24 != 'deac24')$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
for (i in names(table(subset(combi, pbad24 %in% c('deac24', 'eco24'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
}
p.adjust(0.003, n = 10)
count = 0
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
p.adjust(0.003, n = 5)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
# for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
for (i in names(table(combi$pbad24))){
print(i)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
count = 0
# for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
for (i in names(table(combi$pbad24))){
print(i)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
p.adjust(0.001, n = 10)
? p.adjust
p.adjust(0.001, n = 10, method = 'fdr')
p.adjust(1e-5, n = 10, method = 'fdr')
View(lolly)
View(combi)
table(lolly$names)
table(lolly$pbd24)
table(lolly$pabd24)
table(lolly$pbad24)
grepl('gefeR24_empty33', combi$names)
View(lolly)
combi$names[grepl('gefeR24_empty33', combi$names)]
combi$names[grepl('gefeR24', combi$names)]
#lollypop
lolly <- aggregate(combi, fold_rescue ~ names * motif, mean)
lolly$label <- combi$label[match(lolly$names, combi$names)]
lolly$pbad33 <- combi$pbad33[match(lolly$names, combi$names)]
lolly$pbad33 <- gsub('Empty pBAD33', 'Empty control plasmid', lolly$pbad33)
lolly$pbad33 <- gsub('EarP on pBAD33', 'EarP', lolly$pbad33)
View(lolly)
View(lolly)
lolly$label <- factor(lolly$label, levels = c('Δefp +<br>*D. acetiphilus* EF-P', 'Δefp +<br>*H. aurantiacus* EF-P', 'Δefp +<br>*M. prima* EF-P',
'Δefp +<br>*G. ferrihydriticus* EF-P', 'Δefp +<br>*N. communis* EF-P', 'Δefp +<br>*D. radiodurans* EF-P',
'Δefp +<br>*S. oneidensis* EF-P', 'Δefp +<br>*P. putida* EF-P', 'wildtype', 'Δefp +<br>*E. coli* EF-P'))
lolly$type <- ifelse(grepl('BW|eco|ppu|shon', lolly$names), 'Control', 'Experimental')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif, scales = 'free') +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
count = 0
# for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
for (i in names(table(combi$pbad24))){
print(i)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_bw() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_linedraw() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_linedraw() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_classic() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_classic() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#BBECCD", "#884EBA"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 8, height = 5)
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_rect(xmin = 0, xmax = 15, ymin = 1, xmax = 3) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_rect(xmin = 0, xmax = 15, ymin = 1, ymax = 3) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
lolly$label <- factor(lolly$label, levels = c('Δefp +<br>*D. acetiphilus* EF-P', 'Δefp +<br>*H. aurantiacus* EF-P', 'Δefp +<br>*M. prima* EF-P',
'Δefp +<br>*N. communis* EF-P', 'Δefp +<br>*D. radiodurans* EF-P', 'Δefp +<br>*G. ferrihydriticus* EF-P',
'Δefp +<br>*S. oneidensis* EF-P', 'Δefp +<br>*P. putida* EF-P', 'wildtype', 'Δefp +<br>*E. coli* EF-P'))
lolly$type <- ifelse(grepl('BW|eco|ppu|shon', lolly$names), 'Control', 'Experimental')
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
# geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
# geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(legend.title = element_text(family="Helvetica", size=10, color = "#666666")) +
theme(legend.text = element_text(family="Helvetica", size=10, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
#lollypop
lolly <- aggregate(combi, fold_rescue ~ names * motif, mean)
lolly$label <- combi$label[match(lolly$names, combi$names)]
lolly$pbad33 <- combi$pbad33[match(lolly$names, combi$names)]
lolly$pbad33 <- gsub('Empty pBAD33', 'Control plasmid', lolly$pbad33)
lolly$pbad33 <- gsub('EarP on pBAD33', 'EarP', lolly$pbad33)
lolly$label <- factor(lolly$label, levels = c('Δefp +<br>*D. acetiphilus* EF-P', 'Δefp +<br>*H. aurantiacus* EF-P', 'Δefp +<br>*M. prima* EF-P',
'Δefp +<br>*N. communis* EF-P', 'Δefp +<br>*D. radiodurans* EF-P', 'Δefp +<br>*G. ferrihydriticus* EF-P',
'Δefp +<br>*S. oneidensis* EF-P', 'Δefp +<br>*P. putida* EF-P', 'wildtype', 'Δefp +<br>*E. coli* EF-P'))
lolly$type <- ifelse(grepl('BW|eco|ppu|shon', lolly$names), 'Control', 'Experimental')
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
# geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(legend.title = element_text(family="Helvetica", size=12, color = "#666666")) +
theme(legend.text = element_text(family="Helvetica", size=12, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#9DD6CE", "#34343F"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
# geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=14, color = "#666666"),
panel.grid = element_blank()) +
theme(legend.title = element_text(family="Helvetica", size=12, color = "#666666")) +
theme(legend.text = element_text(family="Helvetica", size=12, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#34343F", "#9DD6CE"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
# for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
for (i in names(table(combi$pbad24))){
print(i)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
View(combi)
subset(combi, grepl('ppu24', names)  & motif == 'LPPP')
# for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
for (i in names(table(subset(combi, well != 'E2')$pbad24))){
print(i)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
fold <- ggplot(na.omit(subset(lolly, grepl('deltaEFP_empty24|BW', names) == FALSE)),
aes(x = fold_rescue, y = label)) +
facet_wrap(~ motif) +
# geom_rect(xmin = 0, xmax = 15, ymin = 7, ymax = 9) +
geom_vline(xintercept = 1, linetype = 'dashed', color = '#E95F56') +
geom_line(aes(group = label), color="#E7E7E7", linewidth = 3.5) +
geom_point(aes(color = pbad33), size = 3) +
ylab("") +
xlab("fold change \u0394efp / \u0394efp + EF-P") +
theme_minimal() +
theme(legend.justification = c(0.975, 0.975), legend.position = c(0.975, 0.975)) +
theme(text = element_text(family="Helvetica", size=12, color = "#666666"),
panel.grid = element_blank()) +
theme(legend.title = element_text(family="Helvetica", size=12, color = "#666666")) +
theme(legend.text = element_text(family="Helvetica", size=12, color = "#666666")) +
theme(strip.text = element_text(family="Helvetica", size=14, color = "#666666")) +
theme(axis.text.y = ggtext::element_markdown()) +
scale_color_manual(values = c("#34343F", "#9DD6CE"), name = 'Co-expressed with:')
ggsave('~/Documents/munich/native_cloning/arginine_cloning_june24/hisL/fold_change_lolly.svg', fold, width = 7, height = 4)
count = 0
# for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
for (i in names(table(subset(combi)$pbad24))){
print(i)
check <- subset(combi, motif == 'LPPP' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
p.adjust(0.001075, 10)
p.adjust(0.001075, n = 10)
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
# for (i in names(table(subset(combi)$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
count = 0
for (i in names(table(subset(combi, ! pbad24 %in% c('deac24', 'eco24', 'gefeR24', 'ppu24', 'shon24'))$pbad24))){
# for (i in names(table(subset(combi)$pbad24))){
print(i)
check <- subset(combi, motif == 'TPPH' & grepl(i, names))
print(t.test(normalized_lumi_1000 ~ pbad33, check))
print(t.test(fold_rescue ~ pbad33, check))
count = count + 1
print(count)
}
p.adjust(0.003842, n = 5)
p.adjust(0.001075, n = 10)
